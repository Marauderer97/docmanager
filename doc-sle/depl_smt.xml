<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<!-- Converted by suse-upgrade version 1.1 -->
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha.smt">
<!--<title>Configuring Clients to Use &smt;</title>-->
<!-- <sect1 id="smt.client.clientsetupscript">
  <title>Configuring Clients Using the clientSetup4SMT.sh Script</title>

  <para>
   The <command>/usr/share/doc/packages/smt/clientSetup4SMT.sh</command>
   script is provided with &smt;. This script allows to configure a client
   machine to use a &smt; server or to reconfigure it to use a different
   &smt; server.
  </para>

  <para>
   To configure a client machine to use &smt; with the
   <command>clientSetup4SMT.sh</command> script, follow these steps:
  </para>

  <procedure>
   <step>
    <para>
     Copy the
     <filename>/usr/share/doc/packages/smt/clientSetup4SMT.sh</filename>
     script from your &smt; server to the client machine.
    </para>
   </step>
   <step>
    <para>
     As &rootuser;, execute the script on the client machine. The script can
     be executed in two ways:
    </para>
    <itemizedlist>
     <listitem>
      <para>
       The script name is followed by the registration URL:
      </para>
<screen>./clientSetup4SMT.sh <replaceable>registration_URL</replaceable></screen>
      <para>
       for example:
      </para>
<screen>./clientSetup4SMT.sh  https://smt.&exampledomain;/center/regsvc</screen>
     </listitem>
     <listitem>
      <para>
       The script name is followed by the <option>- -host</option> option
       followed by host name of the &smt; server:
      </para>
<screen>./clientSetup4SMT.sh  - -host <replaceable>server_hostname</replaceable></screen>
      <para>
       for example:
      </para>
<screen>./clientSetup4SMT.sh - -host  smt.&exampledomain;</screen>
     </listitem>
    </itemizedlist>
    <para>
     The script downloads the server's CA certificate.
    </para>
    <important>
     <title>The <option>- -host</option> Parameter</title>
     <para>
      The host name that needs to be provided with the
      <option>- -host</option> parameter, needs to be the same name the
      certificate is issued for. Furthermore, if the name in the certificate
      is the fully qualified host name (for example, add
      smt.&exampledomain;), it needs to be entered as such&mdash;entering
      the <quote>short</quote> name (smt) will cause the
      <command>clientSetup4SMT.sh</command> script to fail.
     </para>
    </important>
   </step>
   <step>
    <para>
     Accept the server's CA certificate by pressing <keycap>y</keycap>.
    </para>
   </step>
   <step>
    <para>
     The script performs all necessary modifications on the client. If
     wanted, the registration itself can be performed by the script.
    </para>
   </step>
   <step>
    <para>
     <remark>toms 2014-05-19: http://bugzilla.suse.com/show_bug.cgi?id=857639#c11
        "How the new SUSEConnect will do it is still unclear." - - mc
      </remark>
     Perform a registration by executing <command>SUSEConnect</command>
     on the client.
    </para>
   </step>
  </procedure>
 </sect1>-->
<!--
 <sect1 id="sec.smt.register">
  <title>Registering Clients Against an &smt; Test Environment</title>

  <remark>toms 2014-05-19: http://bugzilla.suse.com/show_bug.cgi?id=857639#c11
        "How the new SUSEConnect will do it is still unclear." - - mc
        
       "SMT staging. Means not register against the normal env $RCE/... but 
       against the "testing" stage.
       SUSEConnect needs to submit an extra paramter specified via commandline. 
       And this is not defined nor implemented yet." - - mc 
  </remark>

  <para>
   To configure a client to register against the test environment instead of
   the production environment, use <command>SUSEConnect</command> on the
   client machine:
  </para>

<screen>SUSEConnect -r <replaceable>REG_CODE</replaceable></screen>

  <para>
   Replace <replaceable>REG_CODE</replaceable> with your product's
   registration code. You can find it at the
   <ulink
     url="http://scc.suse.com"/> site.
  </para>

<!- - 
     toms 2014-05-19: Not sure if this procedure always work (especially with
                      the above comment)
     
     1. Log in to http://scc.suse.com with your account credentials.
     2. Click the "Subscriptions" tab.
     3. Search for your product in the search field on the left side or
        choose one entry from the list.
     4. Click the correct product name. The new page contains the following
        information:
        
                    Start date    - - -
                   Expiry date    January 1, 2100 
             Registration code    69302@HOU-EXT-RES-fe55461921 
  Number of registered systems    0 of âˆž 
     5. Run SUSEConnect on your client which needs to be registered.
        Use the registration code from the previous step.
        # SUSEConnect -r "69302@HOU-EXT-RES-fe55461921"
     6. Check what repositories have been added:
        # zypper sl
  
  - ->

  <para>
   For more information about using &smt; with a test environment, refer to
   the &smtguide;.
  </para>
 </sect1>-->
 <title>Subscription Management</title>
 <info/>
<!--<title>Configuring Clients to Use &smt;</title>-->
 <para>
  Any machine running &sls; &productnumber; or &sled;
  &productnumber; can be configured to register against local &smtool;
  server to download software updates instead of communicating directly with
  the &scc;. To use an &smt; server for client registration and as a
  local update source, you must configure the &smt; server in your
  network first. The &smt; server software is distributed as an add-on
  for &sls; and its configuration is described in the &smtguide;.
  There is no need to install any add-on on the clients to be configured for
  registering against an &smt; server.
 </para>
 <para>
  To register a client against an &smt; server, you need to equip the
  client with the server's URL. As client and server communicate via the
  HTTPS protocol during registration, you also need to make sure the client
  trusts the server's certificate. In case your &smt; server is set up to
  use the default server certificate, the CA certificate will be available
  on the &smt; server via HTTP protocol at
  <literal>http://<replaceable>FQDN</replaceable>/smt.crt</literal>. In this
  case you do not need to concern yourself with the certificate: the
  registration process will automatically download the CA certificate from
  there, unless configured otherwise. You must enter a path to the server's
  CA certificate if the certificate was issued by an external certificate
  authority.
 </para>
 <para>
  There are several ways to provide this information and to configure the
  client machine to use &smt;. The first way is to provide the needed
  information via kernel parameters at boot time. The second way is to
  configure clients using an &ay; profile. These methods are described in
  the following sections:
 </para>
 <sect1 xml:id="smt.client.parameters">
  <title>Using Kernel Parameters to Access an &smt; Server</title>

  <para>
   Any client can be configured to use &smt; by providing the following
   kernel parameters during machine boot: <literal>regurl</literal> and
   <literal>regcert</literal>. The first parameter is mandatory, the latter
   is optional.
  </para>

  <variablelist>
   <varlistentry>
    <term>regurl</term>
    <listitem>
     <para>
      URL of the &smt; server. The URL needs to be in the following
      format: <literal>https://<replaceable>FQDN</replaceable></literal>
      with <replaceable>FQDN</replaceable> being the fully qualified host
      name of the &smt; server. It must be identical to the FQDN of the
      server certificate used on the &smt; server. Example:
     </para>
<screen>regurl=https://smt.&exampledomain;</screen>
    </listitem>
   </varlistentry>
  </variablelist>

  <warning>
   <title>Beware of Typing Errors</title>
   <para>
    Make sure the values you enter are correct. If <literal>regurl</literal>
    has not been specified correctly, the registration of the update source
    will fail.
   </para>
  </warning>

  <warning>
   <title>Change of &smt; Server Certificate</title>
   <para>
    If the &smt; server gets a new certificate from a new and untrusted
    CA, the clients need to fetch the new CA certificate file. This is done
    automatically with the registration process but only if a URL was used
    at installation time to retrieve the certificate, or if the
    <literal>regcert</literal> parameter was omitted and thus, the default
    URL is used. If the certificate was loaded using any other method (such
    as local path), the CA certificate will not be updated.
   </para>
  </warning>
 </sect1>
 <sect1 xml:id="smt.client.autoyast">
  <title>Configuring Clients Using &ay; Profile</title>

  <para>
   Clients can be configured to register with &smt; server via &ay;
   profile. For general information about creating &ay; profiles and
   preparing automatic installation, refer to
   <xref linkend="cha.deployment.autoinst"/>. In this section, only &smt;
   specific configuration is described.
  </para>

  <para>
   To configure &smt; specific data using &ay;, follow these steps:
  </para>

  <procedure>
   <step>
    <para>
     As &rootuser;, start &yast; and select <menuchoice>
     <guimenu>Miscellaneous</guimenu> <guimenu>Autoinstallation</guimenu>
     </menuchoice> to start the graphical &ay; front-end.
    </para>
    <para>
     From a command line, you can start the graphical &ay; front-end with
     the <command>yast2 autoyast</command> command.
<!--To start the module with
     ncurses user interface, use the <command>yast autoyast</command>
     command.-->
    </para>
   </step>
   <step>
    <para>
     Open an existing profile using
     <menuchoice><guimenu>File</guimenu><guimenu>Open</guimenu></menuchoice>,
     create a profile based on the current system's configuration using
     <menuchoice><guimenu>Tools</guimenu><guimenu>Create Reference
     Profile</guimenu></menuchoice>, or work with an empty profile.
    </para>
   </step>
   <step>
    <para>
     Select <menuchoice><guimenu>Support</guimenu><guimenu>SUSE Customer
     Center Configuration</guimenu></menuchoice>. An overview of the current
     configuration is shown.
    </para>
   </step>
   <step>
    <para>
     Click <guimenu>Edit</guimenu>.
    </para>
   </step>
   <step>
    <para>
     To register while installing automatically, select <guimenu>Run Product
     Registration</guimenu>.
    </para>
   </step>
   <step>
    <para>
     Set the URL of the <guimenu>&smt; Server</guimenu> and, optionally,
     the location of the <guimenu>&smt; Certificate</guimenu>. The
     possible values are the same as for the kernel parameter
     <literal>regurl</literal>. The possible values are the same as for the
     kernel parameters <literal>regurl</literal> and
     <literal>regcert</literal> (see
     <xref linkend="smt.client.parameters"/>). The only exception is that
     the <literal>ask</literal> value for <literal>regcert</literal> does
     not work in &ay;, because it requires user interaction. If using it,
     the registration process will be skipped.
    </para>
    <para>
     If you go through the register process, &yast; can use add-ons
     (extensions or modules) from a &scc; registration server. With
     &scc; you can register and install new products, for example the
     &sdk;, &ha;, &hageo;, and others directly available from your
     &scc;. With &scc; it is even possible to install the latest patch
     level.
    </para>
   </step>
   <step>
    <para>
     Perform all other configuration needed for the systems to be deployed.
    </para>
   </step>
   <step>
    <para>
     Select <menuchoice> <guimenu>File</guimenu> <guimenu>Save As</guimenu>
     </menuchoice> and enter a file name for the profile, such as
     <filename>autoinst.xml</filename>.
    </para>
   </step>
  </procedure>
 </sect1>
<!-- <sect1 id="smt.client.clientsetupscript">
  <title>Configuring Clients Using the clientSetup4SMT.sh Script</title>

  <para>
   The <command>/usr/share/doc/packages/smt/clientSetup4SMT.sh</command>
   script is provided with &smt;. This script allows to configure a client
   machine to use a &smt; server or to reconfigure it to use a different
   &smt; server.
  </para>

  <para>
   To configure a client machine to use &smt; with the
   <command>clientSetup4SMT.sh</command> script, follow these steps:
  </para>

  <procedure>
   <step>
    <para>
     Copy the
     <filename>/usr/share/doc/packages/smt/clientSetup4SMT.sh</filename>
     script from your &smt; server to the client machine.
    </para>
   </step>
   <step>
    <para>
     As &rootuser;, execute the script on the client machine. The script can
     be executed in two ways:
    </para>
    <itemizedlist>
     <listitem>
      <para>
       The script name is followed by the registration URL:
      </para>
<screen>./clientSetup4SMT.sh <replaceable>registration_URL</replaceable></screen>
      <para>
       for example:
      </para>
<screen>./clientSetup4SMT.sh  https://smt.&exampledomain;/center/regsvc</screen>
     </listitem>
     <listitem>
      <para>
       The script name is followed by the <option>- -host</option> option
       followed by host name of the &smt; server:
      </para>
<screen>./clientSetup4SMT.sh  - -host <replaceable>server_hostname</replaceable></screen>
      <para>
       for example:
      </para>
<screen>./clientSetup4SMT.sh - -host  smt.&exampledomain;</screen>
     </listitem>
    </itemizedlist>
    <para>
     The script downloads the server's CA certificate.
    </para>
    <important>
     <title>The <option>- -host</option> Parameter</title>
     <para>
      The host name that needs to be provided with the
      <option>- -host</option> parameter, needs to be the same name the
      certificate is issued for. Furthermore, if the name in the certificate
      is the fully qualified host name (for example, add
      smt.&exampledomain;), it needs to be entered as such&mdash;entering
      the <quote>short</quote> name (smt) will cause the
      <command>clientSetup4SMT.sh</command> script to fail.
     </para>
    </important>
   </step>
   <step>
    <para>
     Accept the server's CA certificate by pressing <keycap>y</keycap>.
    </para>
   </step>
   <step>
    <para>
     The script performs all necessary modifications on the client. If
     wanted, the registration itself can be performed by the script.
    </para>
   </step>
   <step>
    <para>
     <remark>toms 2014-05-19: http://bugzilla.suse.com/show_bug.cgi?id=857639#c11
        "How the new SUSEConnect will do it is still unclear." - - mc
      </remark>
     Perform a registration by executing <command>SUSEConnect</command>
     on the client.
    </para>
   </step>
  </procedure>
 </sect1>-->
 <sect1>
  <title>Configuring Clients Using &yast;</title>

  <para>
   To configure a client to perform the registration against an &smt;
   server use the &yast; <guimenu>SUSE Customer Center
   Configuration</guimenu> module (<command>yast2 scc</command>).
  </para>

  <para>
   On the client, the credentials are not necessary and you may leave the
   relevant fields empty. Click <guimenu>Local Registration Server</guimenu>
   and enter its url. Then click <guimenu>Next</guimenu> until the exit from
   the module.
  </para>
 </sect1>
<!--
 <sect1 id="sec.smt.register">
  <title>Registering Clients Against an &smt; Test Environment</title>

  <remark>toms 2014-05-19: http://bugzilla.suse.com/show_bug.cgi?id=857639#c11
        "How the new SUSEConnect will do it is still unclear." - - mc
        
       "SMT staging. Means not register against the normal env $RCE/... but 
       against the "testing" stage.
       SUSEConnect needs to submit an extra paramter specified via commandline. 
       And this is not defined nor implemented yet." - - mc 
  </remark>

  <para>
   To configure a client to register against the test environment instead of
   the production environment, use <command>SUSEConnect</command> on the
   client machine:
  </para>

<screen>SUSEConnect -r <replaceable>REG_CODE</replaceable></screen>

  <para>
   Replace <replaceable>REG_CODE</replaceable> with your product's
   registration code. You can find it at the
   <ulink
     url="http://scc.suse.com"/> site.
  </para>

<!- - 
     toms 2014-05-19: Not sure if this procedure always work (especially with
                      the above comment)
     
     1. Log in to http://scc.suse.com with your account credentials.
     2. Click the "Subscriptions" tab.
     3. Search for your product in the search field on the left side or
        choose one entry from the list.
     4. Click the correct product name. The new page contains the following
        information:
        
                    Start date    - - -
                   Expiry date    January 1, 2100 
             Registration code    69302@HOU-EXT-RES-fe55461921 
  Number of registered systems    0 of âˆž 
     5. Run SUSEConnect on your client which needs to be registered.
        Use the registration code from the previous step.
        # SUSEConnect -r "69302@HOU-EXT-RES-fe55461921"
     6. Check what repositories have been added:
        # zypper sl
  
  - ->

  <para>
   For more information about using &smt; with a test environment, refer to
   the &smtguide;.
  </para>
 </sect1>-->
 <sect1>
  <title>More Information</title>

  <para>
   For more information about using &smt;, refer to the &smtguide;.
  </para>
 </sect1>
</chapter>
